/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Administrator' at '16-4-15 下午10:06' with Gradle 2.11
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.11/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'
apply from: 'gretty.plugin'
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven{
        url "http://maven.petrikainulainen.net/repo"
    }
}
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.apache.logging.log4j:log4j-core:2.6.2',
			'org.apache.logging.log4j:log4j-slf4j-impl:2.6.2',
			'org.apache.logging.log4j:log4j-api:2.6.2',
    		'junit:junit:4.12',
    		'org.apache.struts:struts2-core:2.5.1',
    		'org.apache.struts:struts2-spring-plugin:2.5.1',
    		'org.apache.struts:struts2-config-browser-plugin:2.5.1',
    		'org.apache.struts:struts2-json-plugin:2.5.1',
    		'javax.servlet:jstl:1.2',
    		'javax.servlet:javax.servlet-api:3.1.0',    		
    		'org.hibernate:hibernate-core:4.3.0.Final',
    		'org.apache.lucene:lucene-core:5.3.1',
    		'org.apache.lucene:lucene-analyzers-smartcn:5.3.1',
    		'org.springframework:spring-context:4.2.6.RELEASE',
    		'org.springframework:spring-orm:4.2.6.RELEASE',
    		'org.springframework:spring-web:4.2.6.RELEASE',
    		'org.springframework:spring-jdbc:4.2.6.RELEASE',
    		'org.springframework:spring-test:4.2.6.RELEASE',
    		'org.springframework:spring-aop:4.2.6.RELEASE',
    		'com.mchange:mchange-commons-java:0.2.3.4',    		
    		'org.aspectj:aspectjweaver:1.8.9',
    		'org.aspectj:aspectjtools:1.8.9',
    		'mysql:mysql-connector-java:5.1.39',
    		'ognl:ognl:3.0.6',			
			'org.apache.poi:poi:3.14',
			'net.sf.json-lib:json-lib:2.4:jdk15',
			'org.jdom:jdom2:2.0.6',
			'com.hynnet:jacob:1.18',
			'org.apache.poi:poi-ooxml:3.15-beta2',
            'org.apache.poi:poi-scratchpad:3.15-beta2',
            'org.apache.poi:poi-ooxml:3.15-beta2',
            'org.apache.poi:poi-scratchpad:3.15-beta2',        
			'org.quartz-scheduler:quartz:2.2.3',
			'com.amazonaws:aws-java-sdk-s3:1.11.37',
			'io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE',
			'commons-httpclient:commons-httpclient:3.1',
			'org.xerial:sqlite-jdbc:3.16.1'
			
			
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
gretty {
    port = 8090  
    contextPath ="/${project.name}"
    servletContainer = 'tomcat8'
    debugPort = 5005      // default
  	debugSuspend = true   // default
}
